@model MedWeb.Web.Models.AddOrEditRegisteredVisitViewModel
@{
    string errorMessage = ViewBag.ErrorMessage == null ? string.Empty : ViewBag.ErrorMessage;
}

<h2>Narzędzie do dodawania wizyty do systemu</h2>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        <strong>Achtung!</strong> @ViewBag.ErrorMessage
    </div>
}
@using (Html.BeginForm("AddVisit", "Visit", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.Label("Doktorzy", new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownListFor(x => x.SelectedDoctorId, Model.DoctorList, new { @class = "form-control" })
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.Label("Pacjenci", new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownListFor(x => x.SelectedPatientId, Model.PatientList, new { @class = "form-control" })
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(x => x.DateTime, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(x => x.DateTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <br />

    <div class="form-group">
        @Html.LabelFor(x => x.Complaint, new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(x => x.Complaint, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <br />

    <button type="submit" class="btn btn-success">Dodaj wizytę</button>
}